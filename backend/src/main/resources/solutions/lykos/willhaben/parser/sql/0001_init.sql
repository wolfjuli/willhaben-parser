CREATE TABLE schema_version
(
    patch_level      SMALLINT PRIMARY KEY,
    patch_file       TEXT,
    created_datetime TIMESTAMPTZ DEFAULT current_timestamp
);


CREATE TABLE watch_lists
(
    id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    url TEXT UNIQUE NOT NULL
);

INSERT INTO watch_lists(url)
VALUES ('https://www.willhaben.at/iad/immobilien/haus-kaufen/haus-angebote?isNavigation=true&areaId=601&areaId=603&areaId=606&areaId=616'),
       ('https://www.willhaben.at/iad/immobilien/eigentumswohnung/eigentumswohnung-angebote?isNavigation=true&areaId=601&areaId=603&areaId=606&areaId=616');

CREATE TABLE listings
(
    id             INT   NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    willhaben_id   INT   NOT NULL,
    hash           TEXT  NOT NULL UNIQUE,
    duplicate_hash TEXT  NOT NULL,
    raw            JSONB NOT NULL
);

CREATE INDEX ON listings (duplicate_hash);


CREATE TABLE data_blocks
(
    id         INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp  TIMESTAMPTZ NOT NULL DEFAULT current_timestamp,
    listing_id INT NOT NULL REFERENCES listings (id) ON DELETE CASCADE ON UPDATE CASCADE,
    UNIQUE (timestamp, listing_id)
);

CREATE TABLE attributes
(
    id SMALLINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    attribute  TEXT NOT NULL UNIQUE,
    normalized TEXT GENERATED ALWAYS AS (
        lower(left(replace(initcap(replace(lower(split_part(attribute, '/', -1)), '_', ' ')), ' ', ''), 1)) ||
        right(replace(initcap(replace(lower(split_part(attribute, '/', -1)), '_', ' ')), ' ', ''), -1) ) STORED
);

CREATE TABLE listing_attributes
(
    listing_id   INT NOT NULL REFERENCES listings (id) ON DELETE CASCADE ON UPDATE CASCADE,
    attribute_id INT NOT NULL REFERENCES attributes (id) ON DELETE CASCADE ON UPDATE CASCADE,
    values       TEXT[],
    PRIMARY KEY (listing_id, attribute_id)
);

CREATE TABLE locations
(
    id          INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat         FLOAT,
    long        FLOAT,
    house_nr    TEXT,
    street      TEXT,
    city        TEXT,
    postal_code INT,
    district    TEXT,
    country     TEXT,
    plus_code   TEXT,
    place_id    TEXT
);

CREATE TABLE listing_locations
(
    listing_id  INT REFERENCES listings (id) ON DELETE CASCADE ON UPDATE CASCADE,
    location_id INT REFERENCES locations (id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (listing_id, location_id)
);

CREATE TABLE user_defined_attributes
(
    listing_id   INT NOT NULL REFERENCES listings (id) ON DELETE CASCADE ON UPDATE CASCADE,
    attribute_id INT NOT NULL REFERENCES attributes (id) ON DELETE CASCADE ON UPDATE CASCADE,
    values       TEXT[],
    PRIMARY KEY (listing_id, attribute_id)
);

CREATE TABLE user_defined_locations
(
    listing_id  INT NOT NULL REFERENCES listings (id) ON DELETE CASCADE ON UPDATE CASCADE,
    location_id INT NOT NULL REFERENCES locations (id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (listing_id, location_id)
);

CREATE MATERIALIZED VIEW duplicate_listings AS
SELECT c.id            AS listing_id,
       array_agg(s.id) AS sibblings
FROM listings c
         JOIN listings s
              ON c.duplicate_hash = s.duplicate_hash
GROUP BY c.id;
